Koding routing dengan tombol yang dapat dipencet untuk pindah ke halaman selanjutnya:

import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Routing Example',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      initialRoute: '/',
      routes: {
        '/': (context) => HomeScreen(),
        '/second': (context) => SecondScreen(),
        '/third': (context) => ThirdScreen(),
      },
    );
  }
}

class HomeScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Home'),
      ),
      body: Center(
        child: ElevatedButton(
          child: Text('Go to Second Screen'),
          onPressed: () {
            Navigator.pushNamed(context, '/second');
          },
        ),
      ),
    );
  }
}

class SecondScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Second Screen'),
      ),
      body: Center(
        child: ElevatedButton(
          child: Text('Go to Third Screen'),
          onPressed: () {
            Navigator.pushNamed(context, '/third');
          },
        ),
      ),
    );
  }
}

class ThirdScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Third Screen'),
      ),
      body: Center(
        child: ElevatedButton(
          child: Text('Go back to Home'),
          onPressed: () {
            Navigator.popUntil(context, ModalRoute.withName('/'));
          },
        ),
      ),
    );
  }
}


Dalam contoh di atas, kita menggunakan routes untuk menghubungkan rute dengan widget yang sesuai. Ketika tombol di tekan di HomeScreen, kita menggunakan Navigator.pushNamed(context, '/second') untuk pindah ke SecondScreen. Kemudian, di SecondScreen, kita juga menggunakan Navigator.pushNamed(context, '/third') untuk pindah ke ThirdScreen. Dan di ThirdScreen, kita menggunakan Navigator.popUntil(context, ModalRoute.withName('/')) untuk kembali ke HomeScreen.

Pastikan untuk mengganti your_app dengan nama direktori dan package aplikasi Anda, serta mengganti HomeScreen, SecondScreen, dan ThirdScreen dengan widget yang sesuai di aplikasi Anda.
